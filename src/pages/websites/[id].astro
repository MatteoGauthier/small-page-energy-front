---
import { Breadcrumbs } from 'astro-breadcrumbs'
import Footer from '../../components/Footer.astro'
import CalculateSection from '../../components/sections/CalculateSection.astro'
import SocialSection from '../../components/sections/SocialSection.astro'
import Layout from '../../layouts/Layout.astro'
import { getWebsitesWithRanks } from '../../lib/api'
import { type GetWebsitesWithRanks } from '../../types/api/getWebsitesWithRanks'
import Button from '../../components/Button.astro'
import ButtonStat from '../../components/ButtonStat.astro'

export async function getStaticPaths() {
    const websites = await getWebsitesWithRanks()
    return websites.map(c => ({
        params: { id: c.website.id },
        props: c
    }))
}
type Props = GetWebsitesWithRanks[number]

const props = Astro.props

const customCrumbs = [
    {
        text: 'Accueil',
        href: '/'
    },
    {
        text: 'Classement général',
        href: '/ranking'
    },
    {
        text: `${props.website.name}`,
        href: `/websites/${props.website.id}`
    }
]
---

<Layout title={`${props.website.name} Résultats - Small Page Energy`}>
    <Breadcrumbs crumbs={customCrumbs} />

    <section class="max-w-screen-xl mx-auto grid grid-cols-7 p-4 gap-8 xs:grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 mb-16">
        <div class="col-span-3 xs:col-span-1 sm:col-span-1 md:col-span-1 lg:col-span-1">
            <h1 class="mb-4">{props.website.name}</h1>
            <div class="flex flex-wrap gap-4">
                {
                  props.website.categories.map(e =>
                  <Button href={`/${e.slug}`} variant="primary" title={e.name} custom="w-fit" />)}
            </div>
        </div>
        <div class="bg-white col-span-4 flex flex-wrap gap-8 p-8 py-16 gap-8 xs:col-span-1 sm:col-span-1 md:col-span-1 lg:col-span-1">
            {
                props.globalRank && (
                    <section class="justify-center p-4 min-w-1/2">
                      {props.globalRank.map((r, i) => (
                        <div class="flex gap-4 items-center mb-4">
                          <h4 class="text-blue600 capitalize date-weight">{new Intl.DateTimeFormat('fr-FR', {month: "long", year: "numeric"}).format(new Date(r.createdAt))}</h4>
                          <ButtonStat weight={`${r.report.siteWeight / 1000} Ko`} primary={true} />
                          </div>
                        <div class="flex gap-4 flex-col">
                              <div class="flex flex-wrap gap-x-4 items-center">
                                    <section class="flex flex-wrap gap-2 items-center">
                                        <p class="number text-blue600">{r.ranking === 1 ? `${r.ranking}er` : `${r.ranking}ème`}</p>
                                        <div class="flex gap-x-2">
                                          <p class="text-blue600">Classement Général</p>
                                        </section>
                                    </div>
                                </div>
                        </div>
                              ))}
                              {
                props.categoriesRanks.map(e => (
                        <div class="flex gap-4 flex-col">
                            {e.ranks.map((r, i) => (
                                <div class="flex flex-wrap gap-x-4 items-center">
                                    <section class="flex flex-wrap gap-2 items-center">
                                        <p class="number text-blue600">{r.ranking === 1 ? `${r.ranking}er` : `${r.ranking}ème`}</p>
                                        <div class="flex gap-x-2">
                                          <p class="text-blue600">Classement {e.category.name}</p>
                                        </div>
                                      </section>
                                </div>
                            ))}
                        </div>
                ))
            }
                    </section>
                )
            }
        </div>
    </section>

    <CalculateSection />
    <SocialSection />
</Layout>

<Footer />

<style>
    body {
        background: radial-gradient(circle at right bottom, hsla(268, 83%, 63%, 0.4) 0%, rgba(108, 55, 170, 0) 50%),
            radial-gradient(circle at 0 -2%, rgba(155, 82, 239, 0.4) 0%, rgba(108, 55, 170, 0) 10%),
            radial-gradient(circle at right center, rgba(155, 82, 239, 0.4) 0%, rgba(108, 55, 170, 0) 30%),
            radial-gradient(circle at left center, rgba(155, 82, 239, 0.4) 0%, rgba(108, 55, 170, 0) 30%),
            radial-gradient(circle at center, rgba(145, 224, 255, 0.5) 0%, rgba(145, 224, 255, 0) 85%);

        @media (min-width: 768px) {
            background: radial-gradient(circle at 120% 70%, hsla(268, 83%, 63%, 0.4) 0%, rgba(108, 55, 170, 0) 30%),
                radial-gradient(circle at -30% -5%, rgba(155, 82, 239, 0.4) 20%, rgba(108, 55, 170, 0) 30%),
                radial-gradient(circle at 0 130%, rgba(155, 82, 239, 0.4) 20%, rgba(108, 55, 170, 0) 30%),
                radial-gradient(circle at right center, rgba(155, 82, 239, 0.4) 0%, rgba(108, 55, 170, 0) 30%),
                radial-gradient(circle at center, rgba(145, 224, 255, 0.5) 0%, rgba(145, 224, 255, 0) 85%);
        }
    }

    .number {
        font-size: 1.625rem;
        min-width: 5rem;
    }
</style>